<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:windows="clr-namespace:System.Windows;assembly=PresentationFramework"
    xmlns:local="clr-namespace:EnumerableTest.Runner.Wpf"
    >
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <windows:Thickness x:Key="DefaultMargin">10,5,10,5</windows:Thickness>

    <Style x:Key="DefaultTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource MaterialDesignFont}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>
        
    <Style TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlockStyle}" />

    <Style x:Key="RoundBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignLightSeparatorBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="10" />
    </Style>

    <Style
        x:Key="LabelTextBlockStyle"
        TargetType="TextBlock"
        BasedOn="{StaticResource DefaultTextBlockStyle}"
        >
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
    </Style>

    <Style x:Key="DefaultControlStyle" TargetType="Control">
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
    </Style>
    
    <Style x:Key="DefaultLabelStyle" TargetType="Label" BasedOn="{StaticResource DefaultControlStyle}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>

    <Style TargetType="Label" BasedOn="{StaticResource DefaultLabelStyle}" />

    <Style
        x:Key="DefaultExpanderStyle"
        TargetType="Expander"
        BasedOn="{StaticResource DefaultControlStyle}"
        >
        <!-- NOTE: Overrides MaterialDesignExpander, which makes it too slow for some reason. -->
    </Style>

    <Style TargetType="Expander" BasedOn="{StaticResource DefaultExpanderStyle}" />

    <Style x:Key="DefaultGroupBoxStyle" TargetType="GroupBox" BasedOn="{StaticResource MaterialDesignGroupBox}">
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <!--
                        NOTE: Default HeaderTemplate uses Label to present the header and it removes some of underscores (i.e., it shows "snake_case" as "snakecase")
                            as the feature of access keys, which we don't want now.
                    -->
                    <TextBlock Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GroupBox" BasedOn="{StaticResource DefaultGroupBoxStyle}" />

    <Style x:Key="DefaultStackPanelStyle" TargetType="StackPanel" />

    <Style x:Key="DefaultKeyValueGridStyle" TargetType="local:KeyValueGrid">
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignLightSeparatorBackground}" />
        <Setter Property="KeyItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border BorderThickness="1,1,0,0" BorderBrush="{DynamicResource MaterialDesignLightSeparatorBackground}">
                        <TextBlock Style="{StaticResource LabelTextBlockStyle}" Text="{Binding}" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ValueItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border BorderThickness="1,1,0,0" BorderBrush="{DynamicResource MaterialDesignLightSeparatorBackground}">
                        <Label Content="{Binding}" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:KeyValueGrid" BasedOn="{StaticResource DefaultKeyValueGridStyle}" />
</ResourceDictionary>
