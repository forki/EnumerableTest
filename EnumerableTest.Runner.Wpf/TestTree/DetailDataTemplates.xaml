<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:core="clr-namespace:EnumerableTest;assembly=EnumerableTest.Core"
    xmlns:sdk="clr-namespace:EnumerableTest.Sdk;assembly=EnumerableTest.Core"
    xmlns:runner="clr-namespace:EnumerableTest.Runner;assembly=EnumerableTest.Runner"
    xmlns:model="clr-namespace:EnumerableTest.Runner.Wpf;assembly=EnumerableTest.Runner.Wpf.Core"
    xmlns:local="clr-namespace:EnumerableTest.Runner.Wpf"
    >
    <!-- Nodes -->
    <DataTemplate DataType="{x:Type model:FolderNode}">
        <StackPanel>
            <TextBlock Text="{Binding Name}" />
            <Separator />
            <ContentPresenter Content="{Binding TestStatistic.Value}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type model:TestMethodNode}">
        <StackPanel>
            <TextBlock Text="{Binding Name}" />
            <Separator />
            <ContentPresenter Content="{Binding LastResult.Value}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type model:TestGroupNode}">
        <ContentPresenter Content="{Binding GroupTest}" />
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type runner:TestMethod}">
        <StackPanel>
            <ContentPresenter Content="{Binding Result}" />
            <StackPanel>
                <StackPanel.Style>
                    <Style
                        TargetType="StackPanel"
                        BasedOn="{StaticResource DefaultStackPanelStyle}"
                        >
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DisposingError}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Separator />
                <StackPanel Orientation="Horizontal">
                    <local:TestStatusMark DataContext="{x:Static runner:TestStatus.Error}" />
                    <TextBlock Text="RUNTIME ERROR in Dispose" />
                </StackPanel>
                <Label Content="{Binding DisposingErrorOrNull}" />
            </StackPanel>
            <Separator />
            <TextBlock>
                Duration: <Run Text="{Binding Duration, Mode=OneTime}" />
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <!-- Tests -->
    <DataTemplate DataType="{x:Type runner:SerializableAssertionTest}">
        <Expander>
            <Expander.Header>
                <StackPanel Orientation="Horizontal">
                    <local:TestStatusMark />
                    <TextBlock Text="{Binding Name}" />
                </StackPanel>
            </Expander.Header>
            <Expander.Style>
                <Style TargetType="Expander">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPassed}" Value="False">
                            <Setter Property="IsExpanded" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Expander.Style>

            <ContentPresenter Content="{Binding Data}" />
        </Expander>
    </DataTemplate>

    <DataTemplate DataType="{x:Type runner:SerializableGroupTest}">
        <GroupBox Header="{Binding Name}">
            <StackPanel>
                <ContentPresenter Content="{Binding Data}" />
                <ItemsControl ItemsSource="{Binding Tests}" />
                <StackPanel>
                    <StackPanel.Style>
                        <Style
                            TargetType="StackPanel"
                            BasedOn="{StaticResource DefaultStackPanelStyle}"
                            >
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ExceptionOrNull}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <Separator />
                    <StackPanel Orientation="Horizontal">
                        <local:TestStatusMark DataContext="{x:Static runner:TestStatus.Error}" />
                        <TextBlock Text="RUNTIME ERROR" />
                    </StackPanel>
                    <Label Content="{Binding ExceptionOrNull}" />
                </StackPanel>
            </StackPanel>
        </GroupBox>
    </DataTemplate>

    <!-- NotExecutedResult -->
    <DataTemplate DataType="{x:Type model:NotExecutedResult}">
        <StackPanel Orientation="Horizontal">
            <local:TestStatusMark DataContext="{x:Static runner:TestStatus.NotCompleted}" />
            <StackPanel VerticalAlignment="Center">
                <TextBlock Text="This test has not completed yet." />
                <TextBlock Text="このテストの実行はまだ完了していません。" />
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!-- TestStatistic -->
    <DataTemplate DataType="{x:Type runner:TestStatistic}">
        <StackPanel>
            <TextBlock>
                Total: <Run Text="{Binding AssertionCount.TotalCount, Mode=OneWay}" />
                / Violated: <Run Text="{Binding AssertionCount.ViolatedCount, Mode=OneWay}" />
                / Error: <Run Text="{Binding AssertionCount.ErrorCount, Mode=OneWay}" />
                / NotCompleted: <Run Text="{Binding AssertionCount.NotCompletedCount, Mode=OneWay}" />
            </TextBlock>
            <TextBlock>
                Total duration: <Run Text="{Binding Duration, Mode=OneWay}" />
            </TextBlock>
        </StackPanel>
    </DataTemplate>
    
    <!-- TestData -->
    <DataTemplate DataType="{x:Type runner:SerializableEmptyTestData}" />

    <DataTemplate DataType="{x:Type runner:SerializableDictionaryTestData}">
        <local:KeyValueGrid ItemsSource="{Binding}" />
    </DataTemplate>

    <!-- MarshalValue -->
    <DataTemplate DataType="{x:Type runner:MarshalValue}">
        <Grid>
            <!-- if Properties.Length = 0 then -->
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Properties.Length}" Value="0">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <TextBox
                    Style="{StaticResource ReadOnlyTextBoxStyle}"
                    Text="{Binding StringAndTypeName, Mode=OneTime}"
                    />
            </Grid>
            <!-- else -->
            <Expander>
                <Expander.Header>
                    <TextBox
                        Style="{StaticResource ReadOnlyTextBoxStyle}"
                        Text="{Binding StringAndTypeName, Mode=OneTime}"
                        />
                </Expander.Header>
                <Expander.Style>
                    <Style TargetType="Expander">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Properties.Length}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Expander.Style>
                <local:KeyValueGrid ItemsSource="{Binding Properties}" />
            </Expander>
            <!-- end if -->
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type runner:MarshalResult}">
        <ContentPresenter Content="{Binding AsObject}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type system:Exception}">
        <Expander>
            <Expander.Header>
                <StackPanel Orientation="Horizontal">
                    <local:TestStatusMark DataContext="{x:Static runner:TestStatus.Error}" />
                    <TextBox
                        Style="{StaticResource ReadOnlyTextBoxStyle}"
                        Text="{Binding Message, Mode=OneTime}"
                        />
                </StackPanel>
            </Expander.Header>
            <TextBox
                Style="{StaticResource ReadOnlyTextBoxStyle}"
                Text="{Binding Mode=OneTime}"
                />
        </Expander>
    </DataTemplate>
</ResourceDictionary>
